/** @file
 *
 *  BCM2712 Processor Properties Topology Table
 *
 *  This table is based on the ACPI 6.3 spec because Windows
 *  (tested with build 22621.1992) is not able to properly parse
 *  newer revisions:
 *    - ACPI 6.4 (rev 3) leads to a 0x7E bug check due to the new
 *      Cache ID field in the Cache Type Structure (see Table 5.140).
 *
 *  It also entirely ignores cache sizes described here, relying on
 *  CCSIDR instead. Fortunately the info there is correct.
 *
 *  Linux parses and displays all this data correctly.
 *
 *  Copyright (c) 2023, Mario Bălănică <mariobalanica02@gmail.com>
 *
 *  SPDX-License-Identifier: BSD-2-Clause-Patent
 *
 **/

#include "AcpiTables.h"

#pragma pack(1)
typedef struct {
  EFI_ACPI_6_3_PPTT_STRUCTURE_PROCESSOR  Package;
  UINT32                                 L3CacheRef;
} BCM2712_PPTT_PACKAGE_NODE;

typedef struct {
  EFI_ACPI_6_3_PPTT_STRUCTURE_PROCESSOR  Cluster;
} BCM2712_PPTT_CLUSTER_NODE;

typedef struct {
  EFI_ACPI_6_3_PPTT_STRUCTURE_PROCESSOR  Core;
  UINT32                                 L1DCacheRef;
  UINT32                                 L1ICacheRef;
  UINT32                                 L2CacheRef;
} BCM2712_PPTT_CORE_NODE;

typedef struct {
  EFI_ACPI_6_3_PROCESSOR_PROPERTIES_TOPOLOGY_TABLE_HEADER  Header;
  BCM2712_PPTT_PACKAGE_NODE                                Package;
  BCM2712_PPTT_CLUSTER_NODE                                Clusters[1];
  BCM2712_PPTT_CORE_NODE                                   Cores[4];
  EFI_ACPI_6_3_PPTT_STRUCTURE_CACHE                        PackageL3Cache;
  EFI_ACPI_6_3_PPTT_STRUCTURE_CACHE                        A76L1DCache;
  EFI_ACPI_6_3_PPTT_STRUCTURE_CACHE                        A76L1ICache;
  EFI_ACPI_6_3_PPTT_STRUCTURE_CACHE                        A76L2Cache;
} BCM2712_PPTT;
#pragma pack()

#define PPTT_DATA_CACHE_ATTRIBUTES                                                \
  {                                                                               \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_ALLOCATION_READ_WRITE,                          \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_CACHE_TYPE_DATA,                                \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_WRITE_POLICY_WRITE_BACK                         \
  }

#define PPTT_INST_CACHE_ATTRIBUTES                                                \
  {                                                                               \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_ALLOCATION_READ,                                \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_CACHE_TYPE_INSTRUCTION,                         \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_WRITE_POLICY_WRITE_BACK                         \
  }

#define PPTT_UNIFIED_CACHE_ATTRIBUTES                                             \
  {                                                                               \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_ALLOCATION_READ_WRITE,                          \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_CACHE_TYPE_UNIFIED,                             \
    EFI_ACPI_6_3_CACHE_ATTRIBUTES_WRITE_POLICY_WRITE_BACK                         \
  }

#define BCM2712_PPTT_CLUSTER_NODE_INIT(ClusterUid) {                              \
  {                                               /* Cluster */                   \
    EFI_ACPI_6_3_PPTT_TYPE_PROCESSOR,             /* Type */                      \
    sizeof (BCM2712_PPTT_CLUSTER_NODE),           /* Length */                    \
    {                                             /* Reserved[2] */               \
      EFI_ACPI_RESERVED_BYTE,                                                     \
      EFI_ACPI_RESERVED_BYTE                                                      \
    },                                                                            \
    {                                             /* Flags */                     \
      EFI_ACPI_6_3_PPTT_PACKAGE_NOT_PHYSICAL,                                     \
      EFI_ACPI_6_3_PPTT_PROCESSOR_ID_INVALID,                                     \
      EFI_ACPI_6_3_PPTT_PROCESSOR_IS_NOT_THREAD,                                  \
      EFI_ACPI_6_3_PPTT_NODE_IS_NOT_LEAF,                                         \
      EFI_ACPI_6_3_PPTT_IMPLEMENTATION_IDENTICAL,                                 \
    },                                                                            \
    OFFSET_OF (BCM2712_PPTT, Package),            /* Parent */                    \
    ClusterUid,                                   /* AcpiProcessorId */           \
    0                                             /* NumberOfPrivateResources */  \
  }                                                                               \
}

#define BCM2712_PPTT_CORE_NODE_INIT(ClusterIndex, CoreUid,                        \
  L1DCacheField, L1ICacheField, L2CacheField) {                                   \
  {                                               /* Core */                      \
    EFI_ACPI_6_3_PPTT_TYPE_PROCESSOR,             /* Type */                      \
    sizeof (BCM2712_PPTT_CORE_NODE),              /* Length */                    \
    {                                             /* Reserved[2] */               \
      EFI_ACPI_RESERVED_BYTE,                                                     \
      EFI_ACPI_RESERVED_BYTE                                                      \
    },                                                                            \
    {                                             /* Flags */                     \
      EFI_ACPI_6_3_PPTT_PACKAGE_NOT_PHYSICAL,                                     \
      EFI_ACPI_6_3_PPTT_PROCESSOR_ID_VALID,                                       \
      EFI_ACPI_6_3_PPTT_PROCESSOR_IS_NOT_THREAD,                                  \
      EFI_ACPI_6_3_PPTT_NODE_IS_LEAF,                                             \
      EFI_ACPI_6_3_PPTT_IMPLEMENTATION_IDENTICAL,                                 \
    },                                                                            \
    OFFSET_OF (BCM2712_PPTT,                                                      \
               Clusters[ClusterIndex]),           /* Parent */                    \
    CoreUid,                                      /* AcpiProcessorId */           \
    3                                             /* NumberOfPrivateResources */  \
  },                                                                              \
  OFFSET_OF (BCM2712_PPTT, L1DCacheField),        /* L1DCacheRef */               \
  OFFSET_OF (BCM2712_PPTT, L1ICacheField),        /* L1ICacheRef */               \
  OFFSET_OF (BCM2712_PPTT, L2CacheField)          /* L2CacheRef */                \
}
#define BCM2712_PPTT_A76_CORE_NODE_INIT(ClusterIndex, CoreUid)                    \
  BCM2712_PPTT_CORE_NODE_INIT (                                                   \
    ClusterIndex, CoreUid,                                                        \
    A76L1DCache, A76L1ICache, A76L2Cache                                          \
  )

#define BCM2712_PPTT_CACHE_NODE_INIT(NextLevelOfCache, Size,                      \
  NumberOfSets, Attributes) {                                                     \
  EFI_ACPI_6_3_PPTT_TYPE_CACHE,                   /* Type */                      \
  sizeof (EFI_ACPI_6_3_PPTT_STRUCTURE_CACHE),     /* Length */                    \
  {                                               /* Reserved[2] */               \
    EFI_ACPI_RESERVED_BYTE,                                                       \
    EFI_ACPI_RESERVED_BYTE                                                        \
  },                                                                              \
  {                                               /* Flags */                     \
    EFI_ACPI_6_3_PPTT_CACHE_SIZE_VALID,                                           \
    EFI_ACPI_6_3_PPTT_NUMBER_OF_SETS_VALID,                                       \
    EFI_ACPI_6_3_PPTT_ASSOCIATIVITY_VALID,                                        \
    EFI_ACPI_6_3_PPTT_ALLOCATION_TYPE_VALID,                                      \
    EFI_ACPI_6_3_PPTT_CACHE_TYPE_VALID,                                           \
    EFI_ACPI_6_3_PPTT_WRITE_POLICY_VALID,                                         \
    EFI_ACPI_6_3_PPTT_LINE_SIZE_VALID                                             \
  },                                                                              \
  NextLevelOfCache,                               /* NextLevelOfCache */          \
  Size,                                           /* Size */                      \
  NumberOfSets,                                   /* NumberOfSets */              \
  Size / NumberOfSets / 64,                       /* Associativity */             \
  Attributes,                                     /* Attributes */                \
  64                                              /* LineSize */                  \
}

STATIC BCM2712_PPTT Pptt = {
  {
    ACPI_HEADER (
      EFI_ACPI_6_3_PROCESSOR_PROPERTIES_TOPOLOGY_TABLE_STRUCTURE_SIGNATURE,
      BCM2712_PPTT,
      EFI_ACPI_6_3_PROCESSOR_PROPERTIES_TOPOLOGY_TABLE_REVISION
    ),
  },
  {
    {                                             /* Package */
      EFI_ACPI_6_3_PPTT_TYPE_PROCESSOR,           /* Type */
      sizeof (BCM2712_PPTT_PACKAGE_NODE),         /* Length */
      {                                           /* Reserved[2] */
        EFI_ACPI_RESERVED_BYTE,
        EFI_ACPI_RESERVED_BYTE
      },
      {                                           /* Flags */
        EFI_ACPI_6_3_PPTT_PACKAGE_PHYSICAL,
        EFI_ACPI_6_3_PPTT_PROCESSOR_ID_INVALID,
        EFI_ACPI_6_3_PPTT_PROCESSOR_IS_NOT_THREAD,
        EFI_ACPI_6_3_PPTT_NODE_IS_NOT_LEAF,
        EFI_ACPI_6_3_PPTT_IMPLEMENTATION_IDENTICAL,
      },
      0,                                          /* Parent */
      0,                                          /* AcpiProcessorId */
      1                                           /* NumberOfPrivateResources */
    },
    OFFSET_OF (BCM2712_PPTT, PackageL3Cache)
  },
  {                                               /* Clusters */
    BCM2712_PPTT_CLUSTER_NODE_INIT (0),           /* Big cluster */
  },
  {                                               /* Cores */
    BCM2712_PPTT_A76_CORE_NODE_INIT (0, 0x0),     /* 4x Cortex-A76 (Big cluster) */
    BCM2712_PPTT_A76_CORE_NODE_INIT (0, 0x1),
    BCM2712_PPTT_A76_CORE_NODE_INIT (0, 0x2),
    BCM2712_PPTT_A76_CORE_NODE_INIT (0, 0x3)
  },

  //
  // Number of sets is likely wrong, but no datasheet to check.
  //
  BCM2712_PPTT_CACHE_NODE_INIT (                  /* PackageL3Cache */
    0,                                            /* NextLevelOfCache */
    SIZE_2MB,                                     /* Size */
    4096,                                         /* NumberOfSets */
    PPTT_UNIFIED_CACHE_ATTRIBUTES                 /* Attributes */
  ),
  BCM2712_PPTT_CACHE_NODE_INIT (                  /* A76L1DCache */
    OFFSET_OF (BCM2712_PPTT, A76L2Cache),         /* NextLevelOfCache */
    SIZE_64KB,                                    /* Size */
    256,                                          /* NumberOfSets */
    PPTT_DATA_CACHE_ATTRIBUTES                    /* Attributes */
  ),
  BCM2712_PPTT_CACHE_NODE_INIT (                  /* A76L1ICache */
    OFFSET_OF (BCM2712_PPTT, A76L2Cache),         /* NextLevelOfCache */
    SIZE_64KB,                                    /* Size */
    256,                                          /* NumberOfSets */
    PPTT_INST_CACHE_ATTRIBUTES                    /* Attributes */
  ),
  BCM2712_PPTT_CACHE_NODE_INIT (                  /* A76L2Cache */
    0,                                            /* NextLevelOfCache */
    SIZE_512KB,                                   /* Size */
    1024,                                         /* NumberOfSets */
    PPTT_UNIFIED_CACHE_ATTRIBUTES                 /* Attributes */
  )
};

VOID* CONST ReferenceAcpiTable = &Pptt;
